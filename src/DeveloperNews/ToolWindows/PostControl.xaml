<UserControl x:Class="DevNews.ToolWindows.PostControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:resources="clr-namespace:DevNews.Resources"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             mc:Ignorable="d" 
             d:DesignHeight="120" d:DesignWidth="300">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PostControl.Style" TargetType="{x:Type Button}">
               <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static vsshell:VsBrushes.DropDownDisabledBackgroundKey}}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static vsshell:VsBrushes.DropDownDisabledBackgroundKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource {x:Static vsshell:VsBrushes.DropDownDisabledBackgroundKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Name="grid">

        <Grid.RowDefinitions>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Button Grid.Row="0" Grid.Column="0" 
                Click="PostClick"
                IsTabStop="True" 
                FocusVisualStyle="{x:Null}"
                Style="{DynamicResource PostControl.Style}" 
                BorderThickness="0 0 0 1"
                BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.AccentPaleKey}}"
                Background="Transparent" 
                Padding="7 5 2 0"
                HorizontalAlignment="Stretch" 
                HorizontalContentAlignment="Stretch">
            
            <StackPanel Orientation="Vertical" Margin="0 5">
                <Label Padding="5 0 5 3" 
                       IsTabStop="False" 
                       FontWeight="DemiBold"
                       Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ControlLinkTextKey}}">
                    <TextBlock Name="lblTitle" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
                </Label>


                <Label Padding="5 0">
                    <TextBlock Name="lblSummary" TextWrapping="WrapWithOverflow" />
                </Label>

                <Label Name="lblSource"
                       HorizontalAlignment="Right"
                       Opacity=".6"
                       Padding="0 0 5 0"
                       Margin="0"/>
            </StackPanel>

            <Button.ContextMenu>
                <ContextMenu Name="ctxMenu">
                    <MenuItem Header="{x:Static resources:Text.Menu_OpenInVisualStudio}" Click="OpenInVsClick" />
                    <MenuItem Header="{x:Static resources:Text.Menu_OpenInDefaultBrowser}" Click="OpenInDefaultBrowserClick" />
                    <Separator/>
                    <MenuItem Header="{x:Static resources:Text.Menu_CopyUrl}" Click="CopyUrlClick">
                        <MenuItem.Icon>
                            <imaging:CrispImage Moniker="{x:Static catalog:KnownMonikers.Copy}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Button.ContextMenu>
        </Button>
    </Grid>
</UserControl>
